name: Cypress

on:
  push:
    branches:
      - 'develop'
      - 'feature/**'
  pull_request:
    types: [opened, synchronize, reopened]
  # Allows workflow to be called from other workflows
  workflow_call:
    inputs:
      ref:
        required: true
        type: string

# Avoid duplicate workflows on same branch
concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}-cypress
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -ileo pipefail {0}

    strategy:
      fail-fast: false
      matrix:
        specs: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ]
    
    steps:
      - name: Checkout Streamlit code
        uses: actions/checkout@v3
        with: 
          ref: ${{ inputs.ref }}
          persist-credentials: false
          submodules: 'recursive'
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
            python-version: "3.10"
      - name: Setup virtual env
        uses: ./.github/actions/make_init
      - name: Install Cypress dependencies
        run: |
          sudo apt install -y xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 curl
      - name: Run make develop
        run: make develop
      - name: Register Streamlit User & Mapbox Token
        run: |
          if [ ! -d $HOME/.streamlit ] ; then
            mkdir $HOME/.streamlit
          fi
          echo '[mapbox]' >  ~/.streamlit/config.toml
          MAPBOX_TOKEN=$(curl -sS https://data.streamlit.io/tokens.json | jq -r '.["mapbox-localhost"]') \
            && echo 'token = "'$MAPBOX_TOKEN'"' >> ~/.streamlit/config.toml
          
          echo '[general]' >  ~/.streamlit/credentials.toml
          echo 'email = "test@streamlit.io"' >> ~/.streamlit/credentials.toml
      - name: Cypress Tests
        env:
          CURRENT_RUN: ${{matrix.specs}}
        run: |
          js_specs=(e2e/specs/*)
          # get how many specs to be split up into 21 runs
          (( interval=(${#js_specs[@]}+21-1)/21 ))
          if [ "$CURRENT_RUN" -eq 1 ]
          then
            startIndex=0
          else
            (( startIndex = (${CURRENT_RUN} - 1) * ${interval} ))
          fi
          echo "Specs tested in this job:"
          echo "${js_specs[@]:${startIndex}:${interval}}"
          scripts/run_e2e_tests.py -a "${js_specs[@]:${startIndex}:${interval}}"
      - name: Store Videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress_videos
          path: frontend/cypress/videos
      - name: Store Snapshots
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress_snapshots
          path: frontend/cypress/snapshots

  cypress_summary:
    runs-on: ubuntu-latest

    # Consolidates cypress test matrix results for a single pass/fail status check
    if: ${{ always() }}
    needs: test

    defaults:
      run:
        shell: bash -ileo pipefail {0}

    steps:
      - name: Check Cypress test matrix status
        if: ${{ needs.test.result == 'failure' }}
        run: exit 1
